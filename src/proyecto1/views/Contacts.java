/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto1.views;

import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import proyecto1.controllers.UserController;

/**
 *
 * @author carlo
 */
public class Contacts extends javax.swing.JFrame {

    private String nombreUsuario;

    /**
     * Creates new form Contacts
     */
    public Contacts(String username) {
        this.nombreUsuario = username;
        initComponents();
        DefaultListModel<String> modeloListaContactos = new DefaultListModel<>();
        jListContactosBuscados.setModel(modeloListaContactos);
        displayAllContacts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        txtContactoBusqueda = new javax.swing.JTextField();
        btnBuscarNombre = new javax.swing.JButton();
        btnBuscarApellido = new javax.swing.JButton();
        btnBuscarUsuario = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListContactosBuscados = new javax.swing.JList<>();
        btnEliminarContacto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("Buscar Contactos");

        btnBuscarNombre.setText("Buscar Por Nombre");
        btnBuscarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarNombreActionPerformed(evt);
            }
        });

        btnBuscarApellido.setText("Buscar Por Apellido");
        btnBuscarApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarApellidoActionPerformed(evt);
            }
        });

        btnBuscarUsuario.setText("Buscar Por Usuario");
        btnBuscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarUsuarioActionPerformed(evt);
            }
        });

        jListContactosBuscados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListContactosBuscados);

        btnEliminarContacto.setText("Eliminar Contacto");
        btnEliminarContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarContactoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jLabel3)
                        .addGap(271, 271, 271))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtContactoBusqueda)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnBuscarNombre)
                                .addGap(56, 56, 56)
                                .addComponent(btnBuscarApellido)
                                .addGap(79, 79, 79)
                                .addComponent(btnBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(208, 208, 208)
                                .addComponent(btnEliminarContacto)))
                        .addGap(58, 58, 58))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel3)
                .addGap(25, 25, 25)
                .addComponent(txtContactoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarApellido)
                    .addComponent(btnBuscarNombre)
                    .addComponent(btnBuscarUsuario))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminarContacto)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void displayAllContacts() {
    DefaultListModel<String> modeloListaContactos = (DefaultListModel<String>) jListContactosBuscados.getModel();
    List<String[]> allContacts = UserController.getAllContacts();

    if (!allContacts.isEmpty()) {
        for (String[] contact : allContacts) {
            String user = contact[0];
            String name = contact[2];
            String lastName = contact[3];
            modeloListaContactos.addElement(user + "|" + name + "|" + lastName);
        }
    } else {
        modeloListaContactos.clear();
        modeloListaContactos.addElement("No hay contactos en la lista.");
    }
}
    private void btnBuscarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarNombreActionPerformed
       DefaultListModel<String> modeloListaContactos = (DefaultListModel<String>) jListContactosBuscados.getModel();
        if (txtContactoBusqueda.getText() != null) {
            String Name = txtContactoBusqueda.getText();
            List<String[]> Information = UserController.getContactoByName(Name);
            if (!Information.isEmpty()) {

                for (int i = 0; i < Information.size(); i++) {
                    String[] userData = Information.get(i);

                    String user = userData[0];
                    String name = userData[2];
                    String lastName = userData[3];
                    modeloListaContactos.addElement(user + "|" + name + "|" + lastName);
                }

            } else {
                modeloListaContactos.clear();
                modeloListaContactos.addElement("No se encontraron datos");
            }
        }
    }//GEN-LAST:event_btnBuscarNombreActionPerformed

    private void btnBuscarApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarApellidoActionPerformed
        DefaultListModel<String> modeloListaContactos = (DefaultListModel<String>) jListContactosBuscados.getModel();
        if (txtContactoBusqueda.getText() != null) {
            String nameUser = txtContactoBusqueda.getText();
            List<String[]> Information = UserController.getContactoByName(nameUser);
            if (!Information.isEmpty()) {

                for (int i = 0; i < Information.size(); i++) {
                    String[] userData = Information.get(i);

                    String user = userData[0];
                    String name = userData[2];
                    String lastName = userData[3];
                    modeloListaContactos.addElement(user + "|" + name + "|" + lastName);
                }

            } else {
                modeloListaContactos.clear();
                modeloListaContactos.addElement("No se encontraron datos");
            }
        }
    }//GEN-LAST:event_btnBuscarApellidoActionPerformed

    private void btnBuscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarUsuarioActionPerformed
        DefaultListModel<String> modeloListaContactos = (DefaultListModel<String>) jListContactosBuscados.getModel();
        if (txtContactoBusqueda.getText() != null) {
            String Usuario = txtContactoBusqueda.getText();
            String Information = UserController.getContactoByUser(Usuario);
            if (Information.length() > 0) {
                modeloListaContactos.clear();
                modeloListaContactos.addElement(Information);
            } else {
                modeloListaContactos.clear();
                modeloListaContactos.addElement("No se encontraron datos");
            }
        }
    }//GEN-LAST:event_btnBuscarUsuarioActionPerformed

    private void btnEliminarContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarContactoActionPerformed
        DefaultListModel<String> modeloListaContactos = (DefaultListModel<String>) jListContactosBuscados.getModel();
        String seleccionado = jListContactosBuscados.getSelectedValue();
        String[] partes = seleccionado.split("\\|");
        String nombreUsuarioContacto = partes[0];
        
        if(seleccionado != null){
            UserController.deleteContact(this.nombreUsuario, nombreUsuarioContacto);
            modeloListaContactos.clear();
            JOptionPane.showMessageDialog(this, "Se elimino el contacto con exito ");
        }
        
    }//GEN-LAST:event_btnEliminarContactoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Contacts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Contacts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Contacts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Contacts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Contacts("").setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarApellido;
    private javax.swing.JButton btnBuscarNombre;
    private javax.swing.JButton btnBuscarUsuario;
    private javax.swing.JButton btnEliminarContacto;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jListContactosBuscados;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtContactoBusqueda;
    // End of variables declaration//GEN-END:variables
}

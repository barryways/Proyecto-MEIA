/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto1.views;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import proyecto1.controllers.AuthController;
import proyecto1.controllers.UserController;
import structures.FileUtils;
import structures.DescriptorManager;
import structures.BitacoraEntry;



/**
 *
 * @author carlo
 */
public class AdminDashboard extends javax.swing.JFrame {

    /**
     * Creates new form AdminDashboard
     */
    public AdminDashboard() {
        initComponents();
        DefaultListModel<String> modeloLista = new DefaultListModel<>();
        jListBuscados.setModel(modeloLista);
        
    }
    
    
    public void cargarDatos(String user) {
        String[] datosUsuario = AuthController.getUserData(user);
        //cargar datos de la pesta√±a principal
        jLabelUsuario.setText("Usuario: " + datosUsuario[0]);
        jLabelNombre1.setText("Nombre: " + datosUsuario[2]);
        jLabelApellido1.setText("Apellido: " + datosUsuario[3]);
        jLabelFecNac1.setText("Fecha de Nacimiento: " + datosUsuario[4]);
        jLabelCorreo1.setText("Correo: " + datosUsuario[5]);
        jLabelTel1.setText("Telefono: " + datosUsuario[6]);
        Icon userImage = new ImageIcon(new ImageIcon(datosUsuario[7]).getImage()
                .getScaledInstance(lblImg.getWidth(), lblImg.getHeight(), 0));
        lblImg.setIcon(userImage);
        if (AuthController.checkUserPrivileges(datosUsuario[0])) {
            jLblTipoUsuario.setText("Tipo de Usuario: Administrador");
        } else {
            jLblTipoUsuario.setText("Tipo de Usuario: Usuario Normal");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JTabbedPane();
        jPanelGeneral = new javax.swing.JPanel();
        lblImg = new javax.swing.JLabel();
        jLabelUsuario = new javax.swing.JLabel();
        jLabelFecNac1 = new javax.swing.JLabel();
        jLabelApellido1 = new javax.swing.JLabel();
        jLabelNombre1 = new javax.swing.JLabel();
        jLabelCorreo1 = new javax.swing.JLabel();
        jLabelTel1 = new javax.swing.JLabel();
        jLblTipoUsuario = new javax.swing.JLabel();
        jBtnEdit = new javax.swing.JButton();
        jButtonBackup = new javax.swing.JButton();
        jTextFieldRutaBackup = new javax.swing.JTextField();
        jPanelBuscarUsuario = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListBuscados = new javax.swing.JList<>();
        jTxtUserSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jBtnBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jBtnEditar = new javax.swing.JButton();
        jBtnEliminar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelUsuario.setText("Usuario:");

        jLabelFecNac1.setText("Fecha de Nacimiento:");

        jLabelApellido1.setText("Apellido:");

        jLabelNombre1.setText("Nombre:");

        jLabelCorreo1.setText("Correo:");

        jLabelTel1.setText("Telefono:");

        jLblTipoUsuario.setText("Tipo de Usuario:");

        jBtnEdit.setText("Editar Usuario o Darse de Baja");
        jBtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditActionPerformed(evt);
            }
        });

        jButtonBackup.setText("Backup");
        jButtonBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackupActionPerformed(evt);
            }
        });

        jTextFieldRutaBackup.setText("Ruta");
        jTextFieldRutaBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRutaBackupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelGeneralLayout = new javax.swing.GroupLayout(jPanelGeneral);
        jPanelGeneral.setLayout(jPanelGeneralLayout);
        jPanelGeneralLayout.setHorizontalGroup(
            jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGeneralLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblImg, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                        .addComponent(jTextFieldRutaBackup))
                    .addComponent(jButtonBackup))
                .addGap(18, 18, 18)
                .addGroup(jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLblTipoUsuario)
                    .addGroup(jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabelUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelNombre1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelApellido1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelFecNac1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                        .addComponent(jLabelCorreo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelTel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jBtnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanelGeneralLayout.setVerticalGroup(
            jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGeneralLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblImg, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelGeneralLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabelUsuario)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelNombre1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelApellido1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelFecNac1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelCorreo1)))
                .addGap(18, 18, 18)
                .addComponent(jLabelTel1)
                .addGap(18, 18, 18)
                .addGroup(jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblTipoUsuario)
                    .addComponent(jTextFieldRutaBackup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnEdit)
                    .addComponent(jButtonBackup))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jPanel.addTab("General", jPanelGeneral);

        jListBuscados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListBuscados);

        jTxtUserSearch.setText("Ej: japerez");

        jLabel1.setText("Introduce el nombre del usuario a buscar");

        jBtnBuscar.setText("Buscar");
        jBtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBuscarActionPerformed(evt);
            }
        });

        jLabel2.setText("Listado de Usuarios, seleccione el que quiere editar o quitar");

        jBtnEditar.setText("Editar");
        jBtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditarActionPerformed(evt);
            }
        });

        jBtnEliminar.setText("Eliminar");
        jBtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarActionPerformed(evt);
            }
        });

        jButton1.setText("Ingresar Nuevo Usuario");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBuscarUsuarioLayout = new javax.swing.GroupLayout(jPanelBuscarUsuario);
        jPanelBuscarUsuario.setLayout(jPanelBuscarUsuarioLayout);
        jPanelBuscarUsuarioLayout.setHorizontalGroup(
            jPanelBuscarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarUsuarioLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanelBuscarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBuscarUsuarioLayout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelBuscarUsuarioLayout.createSequentialGroup()
                        .addGroup(jPanelBuscarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelBuscarUsuarioLayout.createSequentialGroup()
                                .addGroup(jPanelBuscarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanelBuscarUsuarioLayout.createSequentialGroup()
                                        .addComponent(jScrollPane1)
                                        .addGap(33, 33, 33))
                                    .addGroup(jPanelBuscarUsuarioLayout.createSequentialGroup()
                                        .addComponent(jTxtUserSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                                        .addGap(27, 27, 27)))
                                .addGroup(jPanelBuscarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jBtnEditar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBtnEliminar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jBtnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(22, 117, Short.MAX_VALUE))))
        );
        jPanelBuscarUsuarioLayout.setVerticalGroup(
            jPanelBuscarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscarUsuarioLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBuscarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnBuscar))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addGroup(jPanelBuscarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelBuscarUsuarioLayout.createSequentialGroup()
                        .addComponent(jBtnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnEliminar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(26, 26, 26))
        );

        jPanel.addTab("Usuarios", jPanelBuscarUsuario);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String fotoPath = "";

    private void jBtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditActionPerformed
        String textoUsuario = jLabelUsuario.getText();

        // Comprueba si el texto comienza con "Usuario: "
        if (textoUsuario.startsWith("Usuario: ")) {
            // Obtiene el nombre de usuario eliminando "Usuario: "
            String nombreUsuario = textoUsuario.substring("Usuario: ".length());

            // Pasa el nombre de usuario a la ventana de edici√≥n
            EditUser edit = new EditUser();
            edit.cargarDatos(nombreUsuario);
            edit.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "El texto no tiene el formato esperado.");
        }
    }//GEN-LAST:event_jBtnEditActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        LoginFrame register = new LoginFrame();
        register.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jBtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBuscarActionPerformed

      String datosUsuario = UserController.getDataPlane(jTxtUserSearch.getText());
    DefaultListModel<String> modeloLista = (DefaultListModel<String>) jListBuscados.getModel();

    if (!datosUsuario.isEmpty()) {
        String[] datosPartidos = UserController.getAllUser(jTxtUserSearch.getText()).split("\\|"); 
        if (datosPartidos.length > 8 && !"0".equals(datosPartidos[8])) {
            modeloLista.clear();
            modeloLista.addElement(datosUsuario);
        } else {
            modeloLista.clear(); 
            modeloLista.addElement("No se encontraron datos");
        }
    } else {
        modeloLista.clear(); 
        modeloLista.addElement("No se encontraron datos");
    }
    }//GEN-LAST:event_jBtnBuscarActionPerformed

    private void jBtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditarActionPerformed
        String seleccionado = jListBuscados.getSelectedValue();

        if (seleccionado != null) {
            // Divide la cadena en partes usando el car√°cter "|"
            String[] partes = seleccionado.split("\\|");

            if (partes.length > 0) {
                // Obtiene la primera parte, que deber√≠a ser el nombre de usuario
                String nombreUsuario = partes[0].trim();

                // Pasa el nombre de usuario a la ventana de edici√≥n
                EditUser edit = new EditUser();
                edit.cargarDatos(nombreUsuario);
                edit.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontr√≥ el nombre de usuario en el elemento seleccionado.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ning√∫n elemento seleccionado.");
        }

    }//GEN-LAST:event_jBtnEditarActionPerformed

    private void jBtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarActionPerformed

        String seleccionado = jListBuscados.getSelectedValue();
        DefaultListModel<String> modeloLista = (DefaultListModel<String>) jListBuscados.getModel();
        if (seleccionado != null) {
            // Divide la cadena en partes usando el car√°cter "|"
            String[] partes = seleccionado.split("\\|");

            if (partes.length > 0) {
                // Obtiene la primera parte, que deber√≠a ser el nombre de usuario
                String nombreUsuario = partes[0].trim();
                UserController.eliminarUsuario(nombreUsuario);
                JOptionPane.showMessageDialog(this, "Persona eliminada con exito");
                modeloLista.clear();

            } else {
                JOptionPane.showMessageDialog(this, "No se encontr√≥ el nombre de usuario en el elemento seleccionado.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ning√∫n elemento seleccionado.");
        }
    }//GEN-LAST:event_jBtnEliminarActionPerformed

    private void jButtonBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackupActionPerformed
        
    
    // TODO add your handling code here:
    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

    int option = fileChooser.showSaveDialog(this);

    if (option == JFileChooser.APPROVE_OPTION) {
        File selectedDirectory = fileChooser.getSelectedFile();
        String backupFolderPath = selectedDirectory.getAbsolutePath() + File.separator + "MEIA_Backup";

        File sourceFolder = new File("C:\\MEIA");
        File destinationFolder = new File(backupFolderPath);

        try {
            
            FileUtils.copyFolder(sourceFolder, destinationFolder);

            // Actualizar la interfaz de usuario
            jTextFieldRutaBackup.setText(backupFolderPath);

            // Obtener el primer usuario de "C:\\MEIA\\usuario.txt"
            String primerUsuario = FileUtils.usuarioCreacion();

            // Agregar entrada a la bit√°cora
            BitacoraEntry entry = new BitacoraEntry(backupFolderPath, primerUsuario);
            BitacoraEntry.addToBitacora(entry, "C:\\MEIA\\bitacora_backup.txt");

            // Actualizar el archivo descriptor
            DescriptorManager.updateDescriptor(primerUsuario, "C:\\MEIA\\desc_bitacora_backup.txt");

            // Muestra un mensaje al finalizar
            JOptionPane.showMessageDialog(this, "Archivos respaldados en la ubicaci√≥n seleccionada.");
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al realizar la copia de seguridad.");
        }
    }
    }//GEN-LAST:event_jButtonBackupActionPerformed
    
    
    private void copyFolder(File source, File destination) throws IOException {
    if (source.isDirectory()) {
        if (!destination.exists()) {
            destination.mkdir();
        }

        String[] files = source.list();
        for (String file : files) {
            File srcFile = new File(source, file);
            File destFile = new File(destination, file);
            copyFolder(srcFile, destFile);
        }
    } else {
        Files.copy(source.toPath(), destination.toPath(), StandardCopyOption.REPLACE_EXISTING);
    }
    }
    private void jTextFieldRutaBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRutaBackupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRutaBackupActionPerformed

    private boolean isValidEmail(String email) {
        String regex = "^[A-Za-z0-9+_.-]+@(.+)$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }

    private boolean isValidPhone(String phone) {
        String regex = "^\\d{8}$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(phone);
        return matcher.matches();
    }

    private boolean isValidDate(String date) {
        String regex = "^\\d{4}-\\d{2}-\\d{2}$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(date);
        return matcher.matches();
    }

    private String getFileExtension(File file) {
        String extension = "";
        String fileName = file.getName();
        int lastIndex = fileName.lastIndexOf(".");
        if (lastIndex > 0) {
            extension = fileName.substring(lastIndex + 1).toLowerCase();
        }
        return extension;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {

            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);

            }

        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnBuscar;
    private javax.swing.JButton jBtnEdit;
    private javax.swing.JButton jBtnEditar;
    private javax.swing.JButton jBtnEliminar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonBackup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelApellido1;
    private javax.swing.JLabel jLabelCorreo1;
    private javax.swing.JLabel jLabelFecNac1;
    private javax.swing.JLabel jLabelNombre1;
    private javax.swing.JLabel jLabelTel1;
    private javax.swing.JLabel jLabelUsuario;
    private javax.swing.JLabel jLblTipoUsuario;
    private javax.swing.JList<String> jListBuscados;
    private javax.swing.JTabbedPane jPanel;
    private javax.swing.JPanel jPanelBuscarUsuario;
    private javax.swing.JPanel jPanelGeneral;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldRutaBackup;
    private javax.swing.JTextField jTxtUserSearch;
    private javax.swing.JLabel lblImg;
    // End of variables declaration//GEN-END:variables
}
